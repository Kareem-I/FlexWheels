// <auto-generated />
using System;
using FlexWheelsNew;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlexWheelsNew.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlexWheelsNew.Models.Bicycle", b =>
                {
                    b.Property<int>("bicycle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.Property<string>("bicycle_brandname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bicycleprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wheeltype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bicycle_id");

                    b.HasIndex("StoreID");

                    b.ToTable("Bicycle");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bicycle_bookings", b =>
                {
                    b.Property<int>("bicycle_id")
                        .HasColumnType("int");

                    b.Property<int>("booking_id")
                        .HasColumnType("int");

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCID")
                        .HasColumnType("int");

                    b.HasKey("bicycle_id", "booking_id");

                    b.HasIndex("CustomerCID");

                    b.HasIndex("booking_id");

                    b.ToTable("Bicycle_bookings");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bookings", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rent_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("return_date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("booking_id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Customer", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SocialSecurityNumber")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoreLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreID");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bicycle", b =>
                {
                    b.HasOne("FlexWheelsNew.Models.Store", "Store")
                        .WithMany("Bicycle")
                        .HasForeignKey("StoreID");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bicycle_bookings", b =>
                {
                    b.HasOne("FlexWheelsNew.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCID");

                    b.HasOne("FlexWheelsNew.Models.Bicycle", "Bicycle")
                        .WithMany("Bicycle_bookings")
                        .HasForeignKey("bicycle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexWheelsNew.Models.Bookings", "Bookings")
                        .WithMany()
                        .HasForeignKey("booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");

                    b.Navigation("Bookings");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bookings", b =>
                {
                    b.HasOne("FlexWheelsNew.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Bicycle", b =>
                {
                    b.Navigation("Bicycle_bookings");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("FlexWheelsNew.Models.Store", b =>
                {
                    b.Navigation("Bicycle");
                });
#pragma warning restore 612, 618
        }
    }
}
